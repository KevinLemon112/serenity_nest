import groovy.json.JsonSlurper

plugins {
    id "com.android.application"
    id "org.jetbrains.kotlin.android"
    id "dev.flutter.flutter-gradle-plugin"

    // Add the Google services Gradle plugin
    id "com.google.gms.google-services"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

/* def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('android/app/key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
} */

def configFile = rootProject.file('/Users/kevinbabakhani/Library/Mobile Documents/com~apple~CloudDocs/Local Code/serenity_nest/config.json')
def configJson = new JsonSlurper().parseText(configFile.text)

android {
    namespace "com.KevinB.serenity_nest"
    compileSdk 36
    ndkVersion "28.2.13676358"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.KevinB.serenity_nest"
        minSdkVersion 26
        targetSdkVersion 36
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled = true

        ndk {
            abiFilters "arm64-v8a", "x86_64"
        }
    }

    signingConfigs {
        release {
            keyAlias configJson.KE_KEY_ALIAS
            keyPassword configJson.KE_KEY_PASSWORD
            storeFile file(configJson.KE_STORE_FILE)
            storePassword configJson.KE_STORE_PASSWORD
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    testOptions {
        unitTests.all {
            enabled = false
        }
    }
}

flutter {
    source '../..'
    target = 'lib/Screens/main.dart'
}

dependencies {
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:32.8.0')

    // Declare the dependencies for the desired Firebase products without specifying versions
    // For example, declare the dependencies for Firebase Authentication and Cloud Firestore
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.android.gms:play-services-auth:21.0.0'
    implementation 'com.android.support:multidex:2.0.1'
    implementation 'com.google.android.material:material:1.12.0-beta01'
}
